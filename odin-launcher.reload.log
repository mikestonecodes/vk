

Build succeeded, launching vk...
DEBUG: Initializing GLFW platform
DEBUG: GLFW platform setup complete
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: Removing driver /usr/lib/libvulkan_intel.so due to not having any physical devices
Validation layer: Removing driver /usr/lib/libvulkan_intel_hasvk.so due to not having any physical devices
Validation layer: Inserted device layer "VK_LAYER_KHRONOS_validation" (libVkLayer_khronos_validation.so)
Validation layer: Failed to find vkGetDeviceProcAddr in layer "libVkLayer_MESA_device_select.so"
Validation layer: vkCreateDevice layer callstack setup to:
Validation layer:    <Application>
Validation layer:      ||
Validation layer:    <Loader>
Validation layer:      ||
Validation layer:    VK_LAYER_KHRONOS_validation
Validation layer:            Type: Explicit
Validation layer:            Enabled By: By the Application
Validation layer:            Manifest: /usr/share/vulkan/explicit_layer.d/VkLayer_khronos_validation.json
Validation layer:            Library:  libVkLayer_khronos_validation.so
Validation layer:      ||
Validation layer:    <Device>
Validation layer:        Using "NVIDIA GeForce RTX 4070 Laptop GPU" with driver: "libGLX_nvidia.so.0"
compiling shader:
compiling shader:
compiling shader:
Discovered 2 shaders: graphics.hlsl compute.hlsl 
Window resized to 1866x666
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Window resized to 3736x2056
compiling shader:
compiling shader:
compiling shader:
Window resized to 1866x666
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compute.hlsl:165:104: error: use of undeclared identifier 'dirt_blend'
            baseCol *= (0.7 + 0.6 * hash11(world_hash * 771u)) * max(push_constants.brightness, 0.0) * dirt_blend;
                                                                                                       ^
compute.hlsl:169:46: error: use of undeclared identifier 'dirt_blend'
            uint addA = (uint)(COLOR_SCALE * dirt_blend);
                                             ^
compute.hlsl:183:2: error: expected '}'
}
 ^
compute.hlsl:66:1: note: to match this '{'
{
^

Failed: compute.hlsl
Recompiling compute.hlsl
compiling shader:
compute.hlsl:183:2: error: expected '}'
}
 ^
compute.hlsl:66:1: note: to match this '{'
{
^

Failed: compute.hlsl
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compute.hlsl:182:5: error: expected unqualified-id
    if (id == 0) {
    ^
compute.hlsl:186:1: error: extraneous closing brace ('}')
}
^

Failed: compute.hlsl
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling graphics.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
