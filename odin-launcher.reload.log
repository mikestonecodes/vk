

Build succeeded, launching vk...
DEBUG: Initializing GLFW platform
DEBUG: GLFW platform setup complete
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: linux_read_sorted_physical_devices:
Validation layer:      Original order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU
Validation layer:      Sorted order:
Validation layer:            [0] NVIDIA GeForce RTX 4070 Laptop GPU  
Validation layer: Copying old device 0 into new device 0
Validation layer: Removing driver /usr/lib/libvulkan_intel.so due to not having any physical devices
Validation layer: Removing driver /usr/lib/libvulkan_intel_hasvk.so due to not having any physical devices
Validation layer: Inserted device layer "VK_LAYER_KHRONOS_validation" (libVkLayer_khronos_validation.so)
Validation layer: Failed to find vkGetDeviceProcAddr in layer "libVkLayer_MESA_device_select.so"
Validation layer: vkCreateDevice layer callstack setup to:
Validation layer:    <Application>
Validation layer:      ||
Validation layer:    <Loader>
Validation layer:      ||
Validation layer:    VK_LAYER_KHRONOS_validation
Validation layer:            Type: Explicit
Validation layer:            Enabled By: By the Application
Validation layer:            Manifest: /usr/share/vulkan/explicit_layer.d/VkLayer_khronos_validation.json
Validation layer:            Library:  libVkLayer_khronos_validation.so
Validation layer:      ||
Validation layer:    <Device>
Validation layer:        Using "NVIDIA GeForce RTX 4070 Laptop GPU" with driver: "libGLX_nvidia.so.0"
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
Discovered 2 shaders: compute.hlsl graphics.hlsl 
Window resized to 1866x1026
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
Recompiling compute.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
Recompiling graphics.hlsl
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
compiling shader:
Validation layer: vkCreateGraphicsPipelines(): pCreateInfos[0].pStages[1] SPIR-V (VK_SHADER_STAGE_FRAGMENT_BIT) uses descriptor [Set 0, Binding 3, variable "globalData"] (type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC) which is not marked with NonWritable, but fragmentStoresAndAtomics was not enabled.
The Vulkan spec states: If the fragmentStoresAndAtomics feature is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage must be decorated with the NonWritable decoration (https://docs.vulkan.org/spec/latest/appendices/spirvenv.html#VUID-RuntimeSpirv-NonWritable-06340)
